Docker

Докер очень полезный инструмент он позволяет создавать контейнеры из каких-либо образов, затем 
соединять эти контейнеры с помощью инструмента docker-compose и работать с проектом. При этом
нет необходимости скачивать себе на компьютер все необходимые компоненты для запуска сайта.
В конфигах dockerfile можно указать какие образы из удаленного хранилища будут скачиваться, а далее
настроить их один раз и эсплуатировать на множествах других компьютерах/станциях.

Для создания образа необходимо скачать какой-нибудь стартовый дистрибутив, к примеру ubuntu,arch или
очень легкий и оптимизированный alpine.

Или же не морочиться с созданием своих образов и взять уже готовые и просто настроить.

При создании Dockerfile можно указывать какой именно образ будет использоваться через команду:
FROM 'ubuntu:latest'
Будет подкачан образ убунту, так же с другими. Для запуска проекта будем использовать три разных
образа из официального репозитория dockerHub, а именно:
1) nginx
2) php-fpm
3) mariadb

При написании конфигов nginx и mariadb, особых трудностей возникать не должно, просто закачка образа,
его запуск и трансляция внутренних портов контейнера во внешние для получения доступа к тому же 
локальному серверу:

FROM 'nginx:latest'
WORKDIR /var/www
CMD ['nginx']
EXPOSE 80

FROM 'mariadb:latest'
CMD ['mariadb']
EXPOSE 3306

При установке php-fpm, необходимо связать его с базой данных, чтобы php мог обрабатывать запросы 
пользователей и сопостовлять их с базой данных, а также установить пару инструментов, которые могут
понадобиться в контейнере, там мы будем проводить большую часть времени.

FROM 'php:fpm-alpine'
COPY ./wait /usr/bin/wait
RUN chmod +x /usr/bin/wait
RUN apk --no-cache add git
RUN apk --no-cache add bash
RUN docker-php-ext-install pdo_mysql
COPY --from=composer /usr/bin/composer /usr/bin/composer
WORKDIR /var/www
CMD composer install; wait database:3306 -- bin/cosole d:m:m; php-fpm;
EXPOSE 9000

В данном случае мы копируем в контейнер wait.sh - скрипт который позволяет удостовериться в
подключении базы данных к fpm, далее мы даем этому скрипту права на запуск. Устанавливаем git и bash
Образ 'php:fpm-alpine' уже содержит в себе необходимые инструменты для работы с бд, но их нужно
установить, собственно это 6 строка.
Копируем composer и устанавливаем основную папку работы.
Через внутренний bash контейнера устанавливаем composer, ждем подключение к бд и после делаем
миграции.
